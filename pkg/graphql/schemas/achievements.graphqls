type Achievement {
    id: Int!
    name: String!
    description: String
    image: String
    rules: Rules!
    end_at: Int
    created_at: Int!
}

type Rules {
    blocks: [RuleBlock!]!
}

type RuleBlock {
    eventsRules: [EventRule!]
    statRules: [StatRule!]
    connection_operator: ConnectionOperator
}

type EventRule {
    event_id: Int!
    need_participate: Boolean!
}

type StatRule {
    stat_id: Int!
    target_value: Int!
    comparison_type: Comparison!
}

enum ConnectionOperator {
    InvalidConnectionOperator
    And
    Or
}

enum Comparison {
    InvalidComparison
    GreaterThan
    Equals
    NotEquals
    LesserThan
}

type GetAchievementsResponse {
    total: Int!
    achievements: [Achievement!]!
}

input CreateAchievement {
    name: String!
    description: String
    image: Upload
    rules: InputRules!
    end_at: Int
}

input UpdateAchievement {
    id: Int!
    name: String
    description: String
    image: Upload
    rules: InputRules
    end_at: Int
}

input InputRules {
    blocks: [InputRuleBlock!]!
}

input InputRuleBlock {
    eventsRules: [InputEventRule!]
    statRules: [InputStatRule!]
    connection_operator: ConnectionOperator
}

input InputEventRule {
    event_id: Int!
    need_participate: Boolean!
}

input InputStatRule {
    stat_id: Int!
    target_value: Int!
    comparison_type: Comparison!
}